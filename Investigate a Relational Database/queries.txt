Q1. Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

SELECT f.title film_title, 
       c.name category_name, 
       COUNT(r.rental_id) rental_count
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON fc.category_id = c.category_id
JOIN inventory i
ON f.film_id = i.film_id
JOIN rental r
ON i.inventory_id = r.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,2
ORDER BY 2,1

Q2. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories?

SELECT f.title, 
       c.name, 
       f.rental_duration, 
       NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music') 

Q3. Provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:

Category
Rental length category
Count

WITH t1 AS (
    SELECT f.title,
           c.name, 
           f.rental_duration, 
           NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
    FROM film f
    JOIN film_category fc
    ON f.film_id = fc.film_id
    JOIN category c
    ON c.category_id = fc.category_id
    WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
)

SELECT t1.name, 
       t1.standard_quartile, 
       COUNT(*)
FROM t1
GROUP BY 1,2
ORDER BY 1,2


Q4. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?

WITH t1 AS (
    SELECT (first_name || ' ' || last_name) AS fullname, 
           c.customer_id, 
           p.amount, 
           p.payment_date
    FROM customer c
    JOIN payment p
    ON c.customer_id = p.customer_id
    ),

    t2 AS (
    SELECT t1.customer_id
    FROM t1
    GROUP BY 1
    ORDER BY SUM(t1.amount) DESC
    LIMIT 10
    )

SELECT DATE_TRUNC('month', t1.payment_date) AS pay_mon,
       t1.fullname, COUNT(*) pay_counterpermon, 
       SUM(t1.amount) pay_amount
FROM t1
JOIN t2
ON t1.customer_id = t2.customer_id
WHERE t1.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
GROUP BY 1,2
ORDER BY 2,1